## Dados climáticos da cidade de Bagé, RS (2007 - 2022)

Fonte: INMET - Instituto Nacional de Meteorologia (https://portal.inmet.gov.br/dadoshistoricos)
```{python}
# Bibliotecas
import pandas as pd
import numpy as np
from matplotlib.dates import DateFormatter, MonthLocator, YearLocator
import matplotlib.pyplot as plt
import seaborn as sns
import sys
import warnings

warnings.filterwarnings("ignore")
```

```{python}
# Lista de nomes dos arquivos
data_set_files = [
    "../Bage/2007/INMET_S_RS_A827_BAGE_04-01-2007_A_31-12-2007.CSV",
    "../Bage/2008/INMET_S_RS_A827_BAGE_01-01-2008_A_31-12-2008.CSV",
    "../Bage/2009/INMET_S_RS_A827_BAGE_01-01-2009_A_31-12-2009.CSV",
    "../Bage/2010/INMET_S_RS_A827_BAGE_01-01-2010_A_31-12-2010.CSV",
    "../Bage/2011/INMET_S_RS_A827_BAGE_01-01-2011_A_31-12-2011.CSV",
    "../Bage/2012/INMET_S_RS_A827_BAGE_01-01-2012_A_31-12-2012.CSV",
    "../Bage/2013/INMET_S_RS_A827_BAGE_01-01-2013_A_31-12-2013.CSV",
    "../Bage/2014/INMET_S_RS_A827_BAGE_01-01-2014_A_31-12-2014.CSV",
    "../Bage/2015/INMET_S_RS_A827_BAGE_01-01-2015_A_31-12-2015.CSV",
    "../Bage/2016/INMET_S_RS_A827_BAGE_01-01-2016_A_31-12-2016.CSV",
    "../Bage/2017/INMET_S_RS_A827_BAGE_01-01-2017_A_31-12-2017.CSV",
    "../Bage/2018/INMET_S_RS_A827_BAGE_01-01-2018_A_31-12-2018.CSV",
    "../Bage/2019/INMET_S_RS_A827_BAGE_01-01-2019_A_31-12-2019.CSV",
    "../Bage/2020/INMET_S_RS_A827_BAGE_01-01-2020_A_31-12-2020.CSV",
    "../Bage/2021/INMET_S_RS_A827_BAGE_01-01-2021_A_31-12-2021.CSV",
    "../Bage/2022/INMET_S_RS_A827_BAGE_01-01-2022_A_31-12-2022.CSV",
]

# Lista para armazenar os DataFrames
dfs = []

for file_path in data_set_files:
    df = pd.read_csv(file_path, encoding="ISO-8859-1", skiprows=8, sep=";")
    
    # Excluir as colunas pelos índices
    df = df.drop(df.columns[[1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19]], axis=1)
    dfs.append(df)
    
# Renomeando a coluna de índice 1 para "DATA (YYYY-MM-DD)" 
for df in dfs[-4:]:
    df.rename(columns={"Data": "DATA (YYYY-MM-DD)"}, inplace=True)

# Convertendo a coluna 'DATA (YYYY-MM-DD)' para datetime
for i, df in enumerate(dfs):
    if i >= len(dfs) - 4:
        # Para os últimos quatro DataFrames
        df['DATA (YYYY-MM-DD)'] = pd.to_datetime(df['DATA (YYYY-MM-DD)'], format="%Y/%m/%d")
    else:
        # Para os demais DataFrames
        df['DATA (YYYY-MM-DD)'] = pd.to_datetime(df['DATA (YYYY-MM-DD)'], format="%Y-%m-%d")
            
# Concatenando todos os DataFrames em um único DataFrame
df_final = pd.concat(dfs, ignore_index=True)
```

```{python}
df_final
```

```{python}
# Substituindo vírgulas por pontos e conversão para float
df_final['TEMPERATURA MÁXIMA NA HORA ANT. (AUT) (°C)'] = df_final['TEMPERATURA MÁXIMA NA HORA ANT. (AUT) (°C)'].str.replace(',', '.').astype(float)
df_final['TEMPERATURA MÍNIMA NA HORA ANT. (AUT) (°C)'] = df_final['TEMPERATURA MÍNIMA NA HORA ANT. (AUT) (°C)'].str.replace(',', '.').astype(float)
df_final['PRECIPITAÇÃO TOTAL, HORÁRIO (mm)'] = df_final['PRECIPITAÇÃO TOTAL, HORÁRIO (mm)'].str.replace(',', '.').astype(float)
```

```{python}
# Criando uma nova coluna para a temperatura mediana diária
df_final['TEMPERATURA_MEDIANA_DIA'] = df_final[['TEMPERATURA MÁXIMA NA HORA ANT. (AUT) (°C)', 'TEMPERATURA MÍNIMA NA HORA ANT. (AUT) (°C)']].median(axis=1)
```

```{python}
# Agregando os dados mensais para temperatura mediana
df_temp_mes = df_final[df_final['TEMPERATURA_MEDIANA_DIA'] >= 0].resample('MS', on='DATA (YYYY-MM-DD)').median().reset_index()
df_temp_mes
```

```{python}
# Criando df para os dados da temperatura mediana mensal de Bagé
bage_temp_mediana = df_temp_mes[['DATA (YYYY-MM-DD)', 'TEMPERATURA_MEDIANA_DIA']].copy()
bage_temp_mediana.columns = ['Data de Referência', 'Temperatura Mediana (°C)']
bage_temp_mediana.head()
```
### Plotando o gráfico da temperatura mediana mensal de Bagé (2007-2022):

```{python}
# Configurando o estilo do Seaborn
sns.set(style="whitegrid")

# Criando um gráfico de linha da temperatura mediana mensal
plt.figure(figsize=(15, 7))
sns.lineplot(data=bage_temp_mediana, x='Data de Referência', y='Temperatura Mediana (°C)', label='Temperatura Mediana Mensal')

# Configurando rótulos e título
plt.xlabel('Data de Referência', labelpad=12, fontsize=14)
plt.ylabel('Temperatura (°C)', labelpad=12, fontsize=14)
plt.title('Temperatura Mediana Mensal de Bagé (2007-2022)', pad=12, fontsize=16)

# Ajustando os ticks do eixo x para exibir semestralmente
locator = MonthLocator(bymonthday=1, interval=6)
plt.gca().xaxis.set_major_locator(locator)
plt.gca().xaxis.set_major_formatter(DateFormatter('%Y-%m-%d'))
plt.xticks(pd.date_range(start='2007-01-01', end='2023-01-01', freq='6MS'), rotation=65, ha='right')

plt.ylim(0, 30)
plt.legend()
plt.tight_layout()
plt.show()
```

```{python}
# Salvando o DataFrame em um arquivo CSV para uso futuro
bage_temp_mediana.to_csv('bage_temp_mediana.csv', index=False)
```

```{python}
# Agregando os dados semestrais para temperatura mediana
df_temp_semestre = df_final[df_final['TEMPERATURA_MEDIANA_DIA'] >= 0].resample('6MS', on='DATA (YYYY-MM-DD)').median().reset_index()
```

```{python}
# Criando df para os dados da temperatura mediana semestral de Bagé
bage_temp_mediana_sem = df_temp_semestre[['DATA (YYYY-MM-DD)', 'TEMPERATURA_MEDIANA_DIA']].copy()
bage_temp_mediana_sem.columns = ['Data de Referência', 'Temperatura Mediana (°C)']
bage_temp_mediana_sem.head()
```

### Plotando o gráfico da temperatura mediana semestral de Bagé (2007-2022):

```{python}
sns.set(style="whitegrid")

# Criando um gráfico de linha da temperatura mediana semestral
plt.figure(figsize=(15, 7))
sns.lineplot(data=bage_temp_mediana_sem, x='Data de Referência', y='Temperatura Mediana (°C)', label='Temperatura Mediana Semestral')

# Configurando rótulos e título
plt.xlabel('Data de Referência', labelpad=12, fontsize=14)
plt.ylabel('Temperatura (°C)', labelpad=12, fontsize=14)
plt.title('Temperatura Mediana Semestral de Bagé (2007-2022)', pad=12, fontsize=16)

# Ajustando os ticks do eixo x para exibir semestralmente
locator = MonthLocator(bymonthday=1, interval=6)
plt.gca().xaxis.set_major_locator(locator)
plt.gca().xaxis.set_major_formatter(DateFormatter('%Y-%m-%d'))
plt.xticks(pd.date_range(start='2007-01-01', end='2023-01-01', freq='6MS'), rotation=65, ha='right')

plt.ylim(0, 30)
plt.legend()
plt.tight_layout()
plt.show()
```

```{python}
# Filtrando os dados de precitação e agrupando por mês
df_precipitacao_mes = df_final[df_final['PRECIPITAÇÃO TOTAL, HORÁRIO (mm)'] >= 0]
df_precipitacao_mes = df_precipitacao_mes.resample('MS', on='DATA (YYYY-MM-DD)').sum().reset_index()
```

```{python}
# Criando df para os dados de pluviosidade mensal de Bagé
bage_precipitacao = df_precipitacao_mes[['DATA (YYYY-MM-DD)', 'PRECIPITAÇÃO TOTAL, HORÁRIO (mm)']].copy()
bage_precipitacao.columns = ['Data de Referência', 'Precipitação (mm)']
bage_precipitacao
```
### Plotando o gráfico da precipitação mensal de Bagé (2007-2022):

```{python}
sns.set(style="whitegrid")

# Criando um gráfico de linha da precipitação mensal
plt.figure(figsize=(15, 7))
sns.lineplot(data=bage_precipitacao, x='Data de Referência', y='Precipitação (mm)', label='Precipitação (mm)')

# Configurando rótulos e título
plt.xlabel('Data de Referência', labelpad=12, fontsize=14)
plt.ylabel('Precipitação (mm)', labelpad=12, fontsize=14)
plt.title('Precipitação Mensal em Bagé (2007-2022)', pad=12, fontsize=16)

# Ajustando os ticks do eixo x para exibir semestralmente
locator = MonthLocator(bymonthday=1, interval=6)
plt.gca().xaxis.set_major_locator(locator)
plt.gca().xaxis.set_major_formatter(DateFormatter('%Y-%m-%d'))
plt.xticks(pd.date_range(start='2007-01-01', end='2023-01-01', freq='6MS'), rotation=65, ha='right')

plt.ylim(0, 550)
plt.legend()
plt.tight_layout()
plt.show()
```

```{python}
# Salvando o DataFrame em um arquivo CSV para uso futuro
bage_precipitacao.to_csv('bage_precipitacao.csv', index=False)
```